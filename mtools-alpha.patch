--- mtools-3.9.9/llong.h.orig	2003-11-18 10:17:52.000000000 +0000
+++ mtools-3.9.9/llong.h	2003-11-18 10:20:21.000000000 +0000
@@ -8,7 +8,7 @@
 /* if off_t is already 64 bits, be happy, and don't worry about the
  * loff_t and llseek stuff */
 #define MT_OFF_T off_t
-#define MT_OFF_T size_t
+#define MT_SIZE_T size_t
 #endif
 
 #ifndef MT_OFF_T
--- mtools-3.9.9/buffer.c.orig	2003-11-18 10:17:52.000000000 +0000
+++ mtools-3.9.9/buffer.c	2003-11-18 10:22:51.000000000 +0000
@@ -209,7 +209,7 @@
 				if ( ret < 0 )
 					return ret;
 				if(ret % This->sectorSize) {
-				    fprintf(stderr, "Weird: read size (%d) not a multiple of sector size (%d)\n", ret, This->sectorSize);
+				    fprintf(stderr, "Weird: read size (%d) not a multiple of sector size (%d)\n", ret, (int)This->sectorSize);
 				    ret -= ret % This->sectorSize;
 				    if(ret == 0) {
 					fprintf(stderr, "Nothing left\n");
@@ -272,7 +272,7 @@
 	if(This->dirty_end > This->cur_size) {
 		fprintf(stderr, 
 			"Internal error, dirty end too big dirty_end=%x cur_size=%x len=%x offset=%d sectorSize=%x\n",
-			This->dirty_end, (unsigned int) This->cur_size, (unsigned int) len, 
+			(int) This->dirty_end, (unsigned int) This->cur_size, (unsigned int) len, 
 				(int) offset, (int) This->sectorSize);
 		fprintf(stderr, "offset + len + grain - 1 = %x\n",
 				(int) (offset + len + This->sectorSize - 1));
